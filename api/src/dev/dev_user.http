//************************************************************************************
//  GETリクエスト || application/json ... htmlでのエラーを返されないようにする
//************************************************************************************

### ユーザー情報取得
GET http://localhost:8000/api/users/show?user_id=1
Accept: application/json

### 所持アイテムリスト取得
GET http://localhost:8000/api/users/item/show?user_id=1&type=6
Accept: application/json

### フォローリスト取得
GET https://api-tikokukaihi.japaneast.cloudapp.azure.com/api/users/follow/show?user_id=3
Accept: application/json

### おすすめのユーザーリスト取得
GET https://api-tikokukaihi.japaneast.cloudapp.azure.com/api/users/recommended/show?user_id=3
Accept: application/json

### 受信メールリスト取得
GET http://localhost:8000/api/users/mail/show?user_id=21
Accept: application/json

### 所持アイテムリスト取得
GET http://localhost:8000/api/users/item/show?user_id=1
Accept: application/json

### フォローログ取得
GET http://localhost:8000/api/logs/follow?user_id=1
Accept: application/json

### ランキング取得
GET http://localhost:8000/api/users/ranking/show?user_id=1
Accept: application/json

### フォロー内でランキング取得
GET http://localhost:8000/api/users/follow/ranking/show?user_id=1
Accept: application/json

### ステージリザルト取得
GET http://localhost:8000/api/users/stage/result/show?user_id=1
Accept: application/json

//**********************************************************
//  POSTリクエスト || Content-Type ... リクエスト本体がJSONという宣言
//**********************************************************

### ユーザー情報登録
POST http://localhost:8000/api/users/store
Content-Type: application/json
Accept: application/json

{
    "name": "TEST2"
}

### ユーザー情報更新
POST http://localhost:8000/api/users/update
Content-Type: application/json
Accept: application/json
Authorization: Bearer 2|tozIbA2o2thyyH6taiFsXeZuz3Ni6vof2DuXx0wF49078daf

{
    "name": "IEEI",
    "title_id": 0,
    "stage_id": 0,
    "icon_id": 3
}

### 所持アイテム更新
POST http://localhost:8000/api/users/item/update
Content-Type: application/json
Accept: application/json
Authorization: Bearer 2|tozIbA2o2thyyH6taiFsXeZuz3Ni6vof2DuXx0wF49078daf

{
    "item_id": 34,
    "option_id": 1,
    "allie_amount": 1
}

### フォロー登録
POST http://localhost:8000/api/users/follow/store
Content-Type: application/json
Accept: application/json
Authorization: Bearer 2|tozIbA2o2thyyH6taiFsXeZuz3Ni6vof2DuXx0wF49078daf

{
    "following_user_id": 3
}

### フォロー解除
POST http://localhost:8000/api/users/follow/destroy
Content-Type: application/json
Accept: application/json
Authorization: Bearer 2|tozIbA2o2thyyH6taiFsXeZuz3Ni6vof2DuXx0wF49078daf

{
    "following_user_id": 5
}

### 受信メール開封
POST http://localhost:8000/api/users/mail/update
Content-Type: application/json
Accept: application/json
Authorization: Bearer 2|tozIbA2o2thyyH6taiFsXeZuz3Ni6vof2DuXx0wF49078daf

{
    "user_mail_id": 11
}

### 受信メール削除
POST http://localhost:8000/api/users/mail/destroy
Content-Type: application/json
Accept: application/json
Authorization: Bearer 2|tozIbA2o2thyyH6taiFsXeZuz3Ni6vof2DuXx0wF49078daf

{
    "user_mail_id": 1
}

### ステージクリア処理
POST https://localhost:8000/api/users/stage/clear/update
Content-Type: application/json
Accept: application/json
Authorization: Bearer 2|tozIbA2o2thyyH6taiFsXeZuz3Ni6vof2DuXx0wF49078daf

{
    "stage_id": 1,
    "is_medal1": 1,
    "is_medal2": 1,
    "time": 34.56,
    "score": 1200
}

### トークン生成処理
POST http://localhost:8000/api/users/token/store
Content-Type: application/json
Accept: application/json

{
    "user_id": 4
}
